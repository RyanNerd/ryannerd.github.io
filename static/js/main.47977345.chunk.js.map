{"version":3,"sources":["components/About/AboutPage.js","components/Contributions/ContributionsPage.js","components/LandingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["AboutPage","Card","style","width","Header","ListGroup","variant","Item","horizontal","Button","href","ContributionsPage","Accordion","defaultActiveKey","Toggle","as","eventKey","Collapse","Body","LandingPage","useState","activeTabKey","setActiveTabKey","Tabs","id","activeKey","onSelect","key","Tab","className","TabContent","title","App","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oSA4BeA,MAvBf,WAEI,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UAClB,kBAACF,EAAA,EAAKG,OAAN,4BACA,kBAACC,EAAA,EAAD,CAAWC,QAAS,SAChB,kBAACD,EAAA,EAAUE,KAAX,KACI,4BACI,+DACA,mFACA,gEAGR,kBAACF,EAAA,EAAD,CAAWG,YAAU,EAACF,QAAS,SAC3B,kBAACD,EAAA,EAAUE,KAAX,KAAgB,kBAACE,EAAA,EAAD,CAAQH,QAAS,OAAQI,KAAK,kCAA9B,eAChB,kBAACL,EAAA,EAAUE,KAAX,KAAgB,kBAACE,EAAA,EAAD,CAAQH,QAAS,OAAQI,KAAK,+BAA9B,mBAChB,kBAACL,EAAA,EAAUE,KAAX,KAAgB,kBAACE,EAAA,EAAD,CAAQH,QAAS,OAAQI,KAAK,oDAA9B,iC,QC+BrBC,MAhDf,WAEI,OACI,kBAACV,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKG,OAAN,sBACA,kBAACQ,EAAA,EAAD,CAAWC,iBAAiB,KACxB,kBAACZ,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKG,OAAN,KACI,kBAACQ,EAAA,EAAUE,OAAX,CAAkBC,GAAId,IAAKG,OAAQY,SAAS,KAA5C,qBAIJ,kBAACJ,EAAA,EAAUK,SAAX,CAAoBD,SAAS,KACzB,kBAACf,EAAA,EAAKiB,KAAN,+CAKR,kBAACjB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKG,OAAN,KACI,kBAACQ,EAAA,EAAUE,OAAX,CAAkBC,GAAId,IAAKG,OAAQY,SAAS,KAA5C,mBAIJ,kBAACJ,EAAA,EAAUK,SAAX,CAAoBD,SAAS,KACzB,kBAACf,EAAA,EAAKiB,KAAN,6CAKR,kBAACjB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKG,OAAN,KACI,kBAACQ,EAAA,EAAUE,OAAX,CAAkBC,GAAId,IAAKG,OAAQY,SAAS,KAA5C,eAIJ,kBAACJ,EAAA,EAAUK,SAAX,CAAoBD,SAAS,KACzB,kBAACf,EAAA,EAAKiB,KAAN,4CCQTC,MA1Cf,WAAwB,IAAD,EACuBC,mBAAS,SADhC,mBACXC,EADW,KACGC,EADH,KAGnB,OACI,kBAACC,EAAA,EAAD,CACIC,GAAG,oBACHC,UAAWJ,EACXK,SAAU,SAACC,GAAD,OAASL,EAAgBK,KAEnC,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXd,SAAS,QACTe,MAAM,SAEN,kBAAC,EAAD,OAGJ,kBAACH,EAAA,EAAD,CAAKC,UAAWC,IACZd,SAAS,gBACTe,MAAM,iBACN,kBAAC,EAAD,OAGJ,kBAACH,EAAA,EAAD,CAAKC,UAAWC,IACXd,SAAS,aACTe,MAAM,4BACP,4BACK,wCACA,sCACA,wGACA,uDACA,sGACA,uFACA,mDACA,2EACA,qEC9BNC,MATf,WACE,OACI,oCACE,wBAAI9B,MAAO,CAAC+B,UAAW,WAAvB,2BACA,kBAAC,EAAD,QCKYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.47977345.chunk.js","sourcesContent":["import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction AboutPage()\n{\n    return (\n        <Card style={{ width: '40rem' }}>\n            <Card.Header>About Ryan Jentzsch</Card.Header>\n            <ListGroup variant={\"flush\"} >\n                <ListGroup.Item>\n                    <ul>\n                        <li>Over 25 years experience in IT.</li>\n                        <li>I've had my fingers in almost every major language.</li>\n                        <li>Networking and SQL experience.</li>\n                    </ul>\n                </ListGroup.Item>\n                <ListGroup horizontal variant={\"flush\"}>\n                    <ListGroup.Item><Button variant={\"link\"} href=\"mailto:ryan.jentzsch@gmail.com\">Contact Me</Button></ListGroup.Item>\n                    <ListGroup.Item><Button variant={\"link\"} href=\"https://github.com/RyanNerd\">GitHub Profile</Button></ListGroup.Item>\n                    <ListGroup.Item><Button variant={\"link\"} href=\"https://stackoverflow.com/users/4323201/ryannerd\">StackOverflow Reputation</Button></ListGroup.Item>\n                </ListGroup>\n            </ListGroup>\n        </Card>\n    )\n}\n\nexport default AboutPage;","import React from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Accordion from \"react-bootstrap/Accordion\";\n\nfunction ContributionsPage()\n{\n    return (\n        <Card>\n            <Card.Header>Contributions</Card.Header>\n            <Accordion defaultActiveKey=\"0\">\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                            Willow Framework\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body>\n                            Willow Framework details placeholder\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                            Slim Framework\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body>\n                            Slim Framework details placeholder\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                            Linux Mint\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body>\n                            Linux Mint details placeholder\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </Card>\n\n    )\n}\n\nexport default ContributionsPage;","import React, {useState} from 'react';\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport TabContent from \"../../styles/tab_content.css\";\nimport AboutPage from \"../About/AboutPage\";\nimport ContributionsPage from \"../Contributions/ContributionsPage\";\n\nfunction LandingPage() {\n    const [ activeTabKey, setActiveTabKey ] = useState('about');\n\n    return (\n        <Tabs\n            id=\"landing-page-tabs\"\n            activeKey={activeTabKey}\n            onSelect={(key) => setActiveTabKey(key)}\n        >\n            <Tab\n                className={TabContent}\n                eventKey=\"about\"\n                title=\"About\"\n            >\n                <AboutPage/>\n            </Tab>\n\n            <Tab className={TabContent}\n                eventKey=\"contributions\"\n                title=\"Contributions\">\n                <ContributionsPage/>\n            </Tab>\n\n            <Tab className={TabContent}\n                 eventKey=\"frameworks\"\n                 title=\"Frameworks and Languages\">\n                <ul>\n                     <li>Assembly</li>\n                     <li>C, C++</li>\n                     <li>COBOL (it's old but for a language invented in the 50's it's not so bad)</li>\n                     <li>C# (wonderful language)</li>\n                     <li>PHP (In the hands of a seasoned developer this is a powerful language)</li>\n                     <li>Visual FoxPro (Microsoft killed this wonderful product)</li>\n                     <li>Visual Basic (yuck)</li>\n                     <li>SQL MySQL, Oracle and MS-SQL: T-SQL, PL/SQL</li>\n                     <li>Kotlin - a great Java alternative</li>\n                </ul>\n            </Tab>\n        </Tabs>\n    )\n}\n\nexport default LandingPage;","import React from 'react';\nimport LandingPage from './components/LandingPage/LandingPage';\n\nfunction App() {\n  return (\n      <>\n        <h2 style={{textAlign: \"center\"}}>Ryan Jentzsch's Profile</h2>\n        <LandingPage/>\n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}